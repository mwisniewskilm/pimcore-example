version: '3.7'
services:
    redis:
        container_name: starterpack-redis
        image: redis:alpine

    db:
        container_name: starterpack-db
        image: mariadb:10.5
        working_dir: /application
        command: [mysqld, --character-set-server=utf8mb4, --collation-server=utf8mb4_unicode_ci, --innodb-file-format=Barracuda, --innodb-large-prefix=1, --innodb-file-per-table=1]
        volumes:
            - starterpack-database:/var/lib/mysql
            - ./.docker/db:/db
        environment:
            - "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}"
            - "MYSQL_DATABASE=${MYSQL_DATABASE}"
            - "MYSQL_USER=${MYSQL_USER}"
            - "MYSQL_PASSWORD=${MYSQL_PASSWORD}"

    nginx:
        container_name: starterpack-nginx
        image: nginx:stable-alpine
        ports:
            - "${NGINX_PORT}:80"
            - "${NGINX_PORT_SSL}:443"
        volumes:
            - .:/var/www/html:cached
            - ./.docker/stage/nginx/site.conf:/etc/nginx/conf.d/default.conf:ro
        depends_on:
            - php-fpm

    php-fpm:
        container_name: starterpack-php
        build:
            context: .docker/stage/php
            dockerfile: .docker/stage/php/php.Dockerfile
            args:
                UID: "${UID}"
                GID: "${GID}"
        user: "${UID}:${GID}"
        depends_on:
            - db
        volumes:
            - .:/var/www/html:cached
            - ./.docker/stage/php/custom.ini:/usr/local/etc/php/conf.d/custom.ini
        environment:
            COMPOSER_HOME: /var/www/html
        
    npm:
        container_name: starterpack-npm
        image: node:latest
        restart: on-failure
        volumes:
            - .:/var/www/html
        working_dir: /var/www/html
        entrypoint: [ "tail", "-f", "/dev/null" ]

volumes:
    starterpack-database:
